export default [
  {
    "statements": [
      "CREATE TABLE \"habit_completions\" (\n  \"id\" TEXT NOT NULL,\n  \"user_id\" TEXT NOT NULL,\n  \"habit_id\" TEXT NOT NULL,\n  \"date\" TEXT NOT NULL,\n  CONSTRAINT \"public_habit_completions_habit_id_fkey\" FOREIGN KEY (\"habit_id\") REFERENCES \"habits\" (\"id\") ON DELETE CASCADE,\n  CONSTRAINT \"habit_completions_pkey\" PRIMARY KEY (\"id\")\n) WITHOUT ROWID;\n",
      "CREATE TABLE \"habits\" (\n  \"id\" TEXT NOT NULL,\n  \"amount\" INTEGER NOT NULL,\n  \"time\" TEXT NOT NULL,\n  \"monday\" INTEGER NOT NULL,\n  \"tuesday\" INTEGER NOT NULL,\n  \"wednesday\" INTEGER NOT NULL,\n  \"thursday\" INTEGER NOT NULL,\n  \"friday\" INTEGER NOT NULL,\n  \"saturday\" INTEGER NOT NULL,\n  \"sunday\" INTEGER NOT NULL,\n  \"name\" TEXT NOT NULL,\n  \"icon\" TEXT NOT NULL,\n  \"color\" TEXT NOT NULL,\n  \"habit_type\" TEXT NOT NULL,\n  \"period\" TEXT NOT NULL,\n  \"team_id\" TEXT,\n  \"user_id\" TEXT,\n  CONSTRAINT \"public_habits_team_fkey\" FOREIGN KEY (\"team_id\") REFERENCES \"teams\" (\"id\") ON DELETE CASCADE,\n  CONSTRAINT \"habits_pkey\" PRIMARY KEY (\"id\")\n) WITHOUT ROWID;\n",
      "CREATE TABLE \"profiles\" (\n  \"id\" TEXT NOT NULL,\n  \"email\" TEXT NOT NULL,\n  \"nickname\" TEXT NOT NULL,\n  \"user_id\" TEXT NOT NULL,\n  CONSTRAINT \"profiles_pkey\" PRIMARY KEY (\"id\")\n) WITHOUT ROWID;\n",
      "CREATE TABLE \"habits_completers\" (\n  \"id\" TEXT NOT NULL,\n  \"user_id\" TEXT NOT NULL,\n  \"habit_id\" TEXT NOT NULL,\n  CONSTRAINT \"public_habits_completers_habit_id_fkey\" FOREIGN KEY (\"habit_id\") REFERENCES \"habits\" (\"id\") ON DELETE CASCADE,\n  CONSTRAINT \"habits_completers_pkey\" PRIMARY KEY (\"id\")\n) WITHOUT ROWID;\n",
      "CREATE TABLE \"teams\" (\n  \"id\" TEXT NOT NULL,\n  \"name\" TEXT NOT NULL,\n  \"user_id\" TEXT NOT NULL,\n  \"link_pswd\" TEXT NOT NULL,\n  \"link_exp\" TEXT NOT NULL,\n  CONSTRAINT \"teams_pkey\" PRIMARY KEY (\"id\")\n) WITHOUT ROWID;\n",
      "CREATE TABLE \"teams_users\" (\n  \"id\" TEXT NOT NULL,\n  \"user_id\" TEXT NOT NULL,\n  \"team_id\" TEXT NOT NULL,\n  \"role\" TEXT NOT NULL,\n  CONSTRAINT \"public_teams_users_team_id_fkey\" FOREIGN KEY (\"team_id\") REFERENCES \"teams\" (\"id\") ON DELETE CASCADE,\n  CONSTRAINT \"teams_users_pkey\" PRIMARY KEY (\"id\")\n) WITHOUT ROWID;\n",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.habit_completions', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_habit_completions_primarykey;",
      "CREATE TRIGGER update_ensure_main_habit_completions_primarykey\n  BEFORE UPDATE ON \"main\".\"habit_completions\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"id\" != new.\"id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_habit_completions_into_oplog;",
      "CREATE TRIGGER insert_main_habit_completions_into_oplog\n   AFTER INSERT ON \"main\".\"habit_completions\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habit_completions')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habit_completions', 'INSERT', json_object('id', new.\"id\"), json_object('date', new.\"date\", 'habit_id', new.\"habit_id\", 'id', new.\"id\", 'user_id', new.\"user_id\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_habit_completions_into_oplog;",
      "CREATE TRIGGER update_main_habit_completions_into_oplog\n   AFTER UPDATE ON \"main\".\"habit_completions\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habit_completions')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habit_completions', 'UPDATE', json_object('id', new.\"id\"), json_object('date', new.\"date\", 'habit_id', new.\"habit_id\", 'id', new.\"id\", 'user_id', new.\"user_id\"), json_object('date', old.\"date\", 'habit_id', old.\"habit_id\", 'id', old.\"id\", 'user_id', old.\"user_id\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_habit_completions_into_oplog;",
      "CREATE TRIGGER delete_main_habit_completions_into_oplog\n   AFTER DELETE ON \"main\".\"habit_completions\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habit_completions')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habit_completions', 'DELETE', json_object('id', old.\"id\"), NULL, json_object('date', old.\"date\", 'habit_id', old.\"habit_id\", 'id', old.\"id\", 'user_id', old.\"user_id\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS compensation_insert_main_habit_completions_habit_id_into_oplog;",
      "CREATE TRIGGER compensation_insert_main_habit_completions_habit_id_into_oplog\n  AFTER INSERT ON \"main\".\"habit_completions\"\n  WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits') AND\n       1 == (SELECT value from _electric_meta WHERE key == 'compensations')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  SELECT 'main', 'habits', 'COMPENSATION', json_object('id', \"id\"), json_object('id', \"id\"), NULL, NULL\n  FROM \"main\".\"habits\" WHERE \"id\" = new.\"habit_id\";\nEND;",
      "DROP TRIGGER IF EXISTS compensation_update_main_habit_completions_habit_id_into_oplog;",
      "CREATE TRIGGER compensation_update_main_habit_completions_habit_id_into_oplog\n   AFTER UPDATE ON \"main\".\"habit_completions\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits') AND\n        1 == (SELECT value from _electric_meta WHERE key == 'compensations')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  SELECT 'main', 'habits', 'COMPENSATION', json_object('id', \"id\"), json_object('id', \"id\"), NULL, NULL\n  FROM \"main\".\"habits\" WHERE \"id\" = new.\"habit_id\";\nEND;",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.habits', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_habits_primarykey;",
      "CREATE TRIGGER update_ensure_main_habits_primarykey\n  BEFORE UPDATE ON \"main\".\"habits\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"id\" != new.\"id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_habits_into_oplog;",
      "CREATE TRIGGER insert_main_habits_into_oplog\n   AFTER INSERT ON \"main\".\"habits\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habits', 'INSERT', json_object('id', new.\"id\"), json_object('amount', new.\"amount\", 'color', new.\"color\", 'friday', new.\"friday\", 'habit_type', new.\"habit_type\", 'icon', new.\"icon\", 'id', new.\"id\", 'monday', new.\"monday\", 'name', new.\"name\", 'period', new.\"period\", 'saturday', new.\"saturday\", 'sunday', new.\"sunday\", 'team_id', new.\"team_id\", 'thursday', new.\"thursday\", 'time', new.\"time\", 'tuesday', new.\"tuesday\", 'user_id', new.\"user_id\", 'wednesday', new.\"wednesday\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_habits_into_oplog;",
      "CREATE TRIGGER update_main_habits_into_oplog\n   AFTER UPDATE ON \"main\".\"habits\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habits', 'UPDATE', json_object('id', new.\"id\"), json_object('amount', new.\"amount\", 'color', new.\"color\", 'friday', new.\"friday\", 'habit_type', new.\"habit_type\", 'icon', new.\"icon\", 'id', new.\"id\", 'monday', new.\"monday\", 'name', new.\"name\", 'period', new.\"period\", 'saturday', new.\"saturday\", 'sunday', new.\"sunday\", 'team_id', new.\"team_id\", 'thursday', new.\"thursday\", 'time', new.\"time\", 'tuesday', new.\"tuesday\", 'user_id', new.\"user_id\", 'wednesday', new.\"wednesday\"), json_object('amount', old.\"amount\", 'color', old.\"color\", 'friday', old.\"friday\", 'habit_type', old.\"habit_type\", 'icon', old.\"icon\", 'id', old.\"id\", 'monday', old.\"monday\", 'name', old.\"name\", 'period', old.\"period\", 'saturday', old.\"saturday\", 'sunday', old.\"sunday\", 'team_id', old.\"team_id\", 'thursday', old.\"thursday\", 'time', old.\"time\", 'tuesday', old.\"tuesday\", 'user_id', old.\"user_id\", 'wednesday', old.\"wednesday\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_habits_into_oplog;",
      "CREATE TRIGGER delete_main_habits_into_oplog\n   AFTER DELETE ON \"main\".\"habits\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habits', 'DELETE', json_object('id', old.\"id\"), NULL, json_object('amount', old.\"amount\", 'color', old.\"color\", 'friday', old.\"friday\", 'habit_type', old.\"habit_type\", 'icon', old.\"icon\", 'id', old.\"id\", 'monday', old.\"monday\", 'name', old.\"name\", 'period', old.\"period\", 'saturday', old.\"saturday\", 'sunday', old.\"sunday\", 'team_id', old.\"team_id\", 'thursday', old.\"thursday\", 'time', old.\"time\", 'tuesday', old.\"tuesday\", 'user_id', old.\"user_id\", 'wednesday', old.\"wednesday\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS compensation_insert_main_habits_team_id_into_oplog;",
      "CREATE TRIGGER compensation_insert_main_habits_team_id_into_oplog\n  AFTER INSERT ON \"main\".\"habits\"\n  WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.teams') AND\n       1 == (SELECT value from _electric_meta WHERE key == 'compensations')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  SELECT 'main', 'teams', 'COMPENSATION', json_object('id', \"id\"), json_object('id', \"id\"), NULL, NULL\n  FROM \"main\".\"teams\" WHERE \"id\" = new.\"team_id\";\nEND;",
      "DROP TRIGGER IF EXISTS compensation_update_main_habits_team_id_into_oplog;",
      "CREATE TRIGGER compensation_update_main_habits_team_id_into_oplog\n   AFTER UPDATE ON \"main\".\"habits\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.teams') AND\n        1 == (SELECT value from _electric_meta WHERE key == 'compensations')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  SELECT 'main', 'teams', 'COMPENSATION', json_object('id', \"id\"), json_object('id', \"id\"), NULL, NULL\n  FROM \"main\".\"teams\" WHERE \"id\" = new.\"team_id\";\nEND;",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.profiles', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_profiles_primarykey;",
      "CREATE TRIGGER update_ensure_main_profiles_primarykey\n  BEFORE UPDATE ON \"main\".\"profiles\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"id\" != new.\"id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_profiles_into_oplog;",
      "CREATE TRIGGER insert_main_profiles_into_oplog\n   AFTER INSERT ON \"main\".\"profiles\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.profiles')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'profiles', 'INSERT', json_object('id', new.\"id\"), json_object('email', new.\"email\", 'id', new.\"id\", 'nickname', new.\"nickname\", 'user_id', new.\"user_id\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_profiles_into_oplog;",
      "CREATE TRIGGER update_main_profiles_into_oplog\n   AFTER UPDATE ON \"main\".\"profiles\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.profiles')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'profiles', 'UPDATE', json_object('id', new.\"id\"), json_object('email', new.\"email\", 'id', new.\"id\", 'nickname', new.\"nickname\", 'user_id', new.\"user_id\"), json_object('email', old.\"email\", 'id', old.\"id\", 'nickname', old.\"nickname\", 'user_id', old.\"user_id\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_profiles_into_oplog;",
      "CREATE TRIGGER delete_main_profiles_into_oplog\n   AFTER DELETE ON \"main\".\"profiles\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.profiles')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'profiles', 'DELETE', json_object('id', old.\"id\"), NULL, json_object('email', old.\"email\", 'id', old.\"id\", 'nickname', old.\"nickname\", 'user_id', old.\"user_id\"), NULL);\nEND;",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.habits_completers', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_habits_completers_primarykey;",
      "CREATE TRIGGER update_ensure_main_habits_completers_primarykey\n  BEFORE UPDATE ON \"main\".\"habits_completers\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"id\" != new.\"id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_habits_completers_into_oplog;",
      "CREATE TRIGGER insert_main_habits_completers_into_oplog\n   AFTER INSERT ON \"main\".\"habits_completers\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits_completers')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habits_completers', 'INSERT', json_object('id', new.\"id\"), json_object('habit_id', new.\"habit_id\", 'id', new.\"id\", 'user_id', new.\"user_id\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_habits_completers_into_oplog;",
      "CREATE TRIGGER update_main_habits_completers_into_oplog\n   AFTER UPDATE ON \"main\".\"habits_completers\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits_completers')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habits_completers', 'UPDATE', json_object('id', new.\"id\"), json_object('habit_id', new.\"habit_id\", 'id', new.\"id\", 'user_id', new.\"user_id\"), json_object('habit_id', old.\"habit_id\", 'id', old.\"id\", 'user_id', old.\"user_id\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_habits_completers_into_oplog;",
      "CREATE TRIGGER delete_main_habits_completers_into_oplog\n   AFTER DELETE ON \"main\".\"habits_completers\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits_completers')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habits_completers', 'DELETE', json_object('id', old.\"id\"), NULL, json_object('habit_id', old.\"habit_id\", 'id', old.\"id\", 'user_id', old.\"user_id\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS compensation_insert_main_habits_completers_habit_id_into_oplog;",
      "CREATE TRIGGER compensation_insert_main_habits_completers_habit_id_into_oplog\n  AFTER INSERT ON \"main\".\"habits_completers\"\n  WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits') AND\n       1 == (SELECT value from _electric_meta WHERE key == 'compensations')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  SELECT 'main', 'habits', 'COMPENSATION', json_object('id', \"id\"), json_object('id', \"id\"), NULL, NULL\n  FROM \"main\".\"habits\" WHERE \"id\" = new.\"habit_id\";\nEND;",
      "DROP TRIGGER IF EXISTS compensation_update_main_habits_completers_habit_id_into_oplog;",
      "CREATE TRIGGER compensation_update_main_habits_completers_habit_id_into_oplog\n   AFTER UPDATE ON \"main\".\"habits_completers\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits') AND\n        1 == (SELECT value from _electric_meta WHERE key == 'compensations')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  SELECT 'main', 'habits', 'COMPENSATION', json_object('id', \"id\"), json_object('id', \"id\"), NULL, NULL\n  FROM \"main\".\"habits\" WHERE \"id\" = new.\"habit_id\";\nEND;",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.teams', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_teams_primarykey;",
      "CREATE TRIGGER update_ensure_main_teams_primarykey\n  BEFORE UPDATE ON \"main\".\"teams\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"id\" != new.\"id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_teams_into_oplog;",
      "CREATE TRIGGER insert_main_teams_into_oplog\n   AFTER INSERT ON \"main\".\"teams\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.teams')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'teams', 'INSERT', json_object('id', new.\"id\"), json_object('id', new.\"id\", 'link_exp', new.\"link_exp\", 'link_pswd', new.\"link_pswd\", 'name', new.\"name\", 'user_id', new.\"user_id\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_teams_into_oplog;",
      "CREATE TRIGGER update_main_teams_into_oplog\n   AFTER UPDATE ON \"main\".\"teams\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.teams')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'teams', 'UPDATE', json_object('id', new.\"id\"), json_object('id', new.\"id\", 'link_exp', new.\"link_exp\", 'link_pswd', new.\"link_pswd\", 'name', new.\"name\", 'user_id', new.\"user_id\"), json_object('id', old.\"id\", 'link_exp', old.\"link_exp\", 'link_pswd', old.\"link_pswd\", 'name', old.\"name\", 'user_id', old.\"user_id\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_teams_into_oplog;",
      "CREATE TRIGGER delete_main_teams_into_oplog\n   AFTER DELETE ON \"main\".\"teams\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.teams')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'teams', 'DELETE', json_object('id', old.\"id\"), NULL, json_object('id', old.\"id\", 'link_exp', old.\"link_exp\", 'link_pswd', old.\"link_pswd\", 'name', old.\"name\", 'user_id', old.\"user_id\"), NULL);\nEND;",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.teams_users', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_teams_users_primarykey;",
      "CREATE TRIGGER update_ensure_main_teams_users_primarykey\n  BEFORE UPDATE ON \"main\".\"teams_users\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"id\" != new.\"id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_teams_users_into_oplog;",
      "CREATE TRIGGER insert_main_teams_users_into_oplog\n   AFTER INSERT ON \"main\".\"teams_users\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.teams_users')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'teams_users', 'INSERT', json_object('id', new.\"id\"), json_object('id', new.\"id\", 'role', new.\"role\", 'team_id', new.\"team_id\", 'user_id', new.\"user_id\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_teams_users_into_oplog;",
      "CREATE TRIGGER update_main_teams_users_into_oplog\n   AFTER UPDATE ON \"main\".\"teams_users\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.teams_users')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'teams_users', 'UPDATE', json_object('id', new.\"id\"), json_object('id', new.\"id\", 'role', new.\"role\", 'team_id', new.\"team_id\", 'user_id', new.\"user_id\"), json_object('id', old.\"id\", 'role', old.\"role\", 'team_id', old.\"team_id\", 'user_id', old.\"user_id\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_teams_users_into_oplog;",
      "CREATE TRIGGER delete_main_teams_users_into_oplog\n   AFTER DELETE ON \"main\".\"teams_users\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.teams_users')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'teams_users', 'DELETE', json_object('id', old.\"id\"), NULL, json_object('id', old.\"id\", 'role', old.\"role\", 'team_id', old.\"team_id\", 'user_id', old.\"user_id\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS compensation_insert_main_teams_users_team_id_into_oplog;",
      "CREATE TRIGGER compensation_insert_main_teams_users_team_id_into_oplog\n  AFTER INSERT ON \"main\".\"teams_users\"\n  WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.teams') AND\n       1 == (SELECT value from _electric_meta WHERE key == 'compensations')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  SELECT 'main', 'teams', 'COMPENSATION', json_object('id', \"id\"), json_object('id', \"id\"), NULL, NULL\n  FROM \"main\".\"teams\" WHERE \"id\" = new.\"team_id\";\nEND;",
      "DROP TRIGGER IF EXISTS compensation_update_main_teams_users_team_id_into_oplog;",
      "CREATE TRIGGER compensation_update_main_teams_users_team_id_into_oplog\n   AFTER UPDATE ON \"main\".\"teams_users\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.teams') AND\n        1 == (SELECT value from _electric_meta WHERE key == 'compensations')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  SELECT 'main', 'teams', 'COMPENSATION', json_object('id', \"id\"), json_object('id', \"id\"), NULL, NULL\n  FROM \"main\".\"teams\" WHERE \"id\" = new.\"team_id\";\nEND;"
    ],
    "version": "1"
  },
  {
    "statements": [
      "ALTER TABLE \"habits\" ADD COLUMN \"electric_user_id\" TEXT;\n",
      "ALTER TABLE \"habit_completions\" ADD COLUMN \"electric_user_id\" TEXT;\n",
      "ALTER TABLE \"profiles\" ADD COLUMN \"electric_user_id\" TEXT;\n",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.habits', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_habits_primarykey;",
      "CREATE TRIGGER update_ensure_main_habits_primarykey\n  BEFORE UPDATE ON \"main\".\"habits\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"id\" != new.\"id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_habits_into_oplog;",
      "CREATE TRIGGER insert_main_habits_into_oplog\n   AFTER INSERT ON \"main\".\"habits\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habits', 'INSERT', json_object('id', new.\"id\"), json_object('amount', new.\"amount\", 'color', new.\"color\", 'electric_user_id', new.\"electric_user_id\", 'friday', new.\"friday\", 'habit_type', new.\"habit_type\", 'icon', new.\"icon\", 'id', new.\"id\", 'monday', new.\"monday\", 'name', new.\"name\", 'period', new.\"period\", 'saturday', new.\"saturday\", 'sunday', new.\"sunday\", 'team_id', new.\"team_id\", 'thursday', new.\"thursday\", 'time', new.\"time\", 'tuesday', new.\"tuesday\", 'user_id', new.\"user_id\", 'wednesday', new.\"wednesday\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_habits_into_oplog;",
      "CREATE TRIGGER update_main_habits_into_oplog\n   AFTER UPDATE ON \"main\".\"habits\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habits', 'UPDATE', json_object('id', new.\"id\"), json_object('amount', new.\"amount\", 'color', new.\"color\", 'electric_user_id', new.\"electric_user_id\", 'friday', new.\"friday\", 'habit_type', new.\"habit_type\", 'icon', new.\"icon\", 'id', new.\"id\", 'monday', new.\"monday\", 'name', new.\"name\", 'period', new.\"period\", 'saturday', new.\"saturday\", 'sunday', new.\"sunday\", 'team_id', new.\"team_id\", 'thursday', new.\"thursday\", 'time', new.\"time\", 'tuesday', new.\"tuesday\", 'user_id', new.\"user_id\", 'wednesday', new.\"wednesday\"), json_object('amount', old.\"amount\", 'color', old.\"color\", 'electric_user_id', old.\"electric_user_id\", 'friday', old.\"friday\", 'habit_type', old.\"habit_type\", 'icon', old.\"icon\", 'id', old.\"id\", 'monday', old.\"monday\", 'name', old.\"name\", 'period', old.\"period\", 'saturday', old.\"saturday\", 'sunday', old.\"sunday\", 'team_id', old.\"team_id\", 'thursday', old.\"thursday\", 'time', old.\"time\", 'tuesday', old.\"tuesday\", 'user_id', old.\"user_id\", 'wednesday', old.\"wednesday\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_habits_into_oplog;",
      "CREATE TRIGGER delete_main_habits_into_oplog\n   AFTER DELETE ON \"main\".\"habits\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habits', 'DELETE', json_object('id', old.\"id\"), NULL, json_object('amount', old.\"amount\", 'color', old.\"color\", 'electric_user_id', old.\"electric_user_id\", 'friday', old.\"friday\", 'habit_type', old.\"habit_type\", 'icon', old.\"icon\", 'id', old.\"id\", 'monday', old.\"monday\", 'name', old.\"name\", 'period', old.\"period\", 'saturday', old.\"saturday\", 'sunday', old.\"sunday\", 'team_id', old.\"team_id\", 'thursday', old.\"thursday\", 'time', old.\"time\", 'tuesday', old.\"tuesday\", 'user_id', old.\"user_id\", 'wednesday', old.\"wednesday\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS compensation_insert_main_habits_team_id_into_oplog;",
      "CREATE TRIGGER compensation_insert_main_habits_team_id_into_oplog\n  AFTER INSERT ON \"main\".\"habits\"\n  WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.teams') AND\n       1 == (SELECT value from _electric_meta WHERE key == 'compensations')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  SELECT 'main', 'teams', 'COMPENSATION', json_object('id', \"id\"), json_object('id', \"id\"), NULL, NULL\n  FROM \"main\".\"teams\" WHERE \"id\" = new.\"team_id\";\nEND;",
      "DROP TRIGGER IF EXISTS compensation_update_main_habits_team_id_into_oplog;",
      "CREATE TRIGGER compensation_update_main_habits_team_id_into_oplog\n   AFTER UPDATE ON \"main\".\"habits\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.teams') AND\n        1 == (SELECT value from _electric_meta WHERE key == 'compensations')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  SELECT 'main', 'teams', 'COMPENSATION', json_object('id', \"id\"), json_object('id', \"id\"), NULL, NULL\n  FROM \"main\".\"teams\" WHERE \"id\" = new.\"team_id\";\nEND;",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.habit_completions', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_habit_completions_primarykey;",
      "CREATE TRIGGER update_ensure_main_habit_completions_primarykey\n  BEFORE UPDATE ON \"main\".\"habit_completions\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"id\" != new.\"id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_habit_completions_into_oplog;",
      "CREATE TRIGGER insert_main_habit_completions_into_oplog\n   AFTER INSERT ON \"main\".\"habit_completions\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habit_completions')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habit_completions', 'INSERT', json_object('id', new.\"id\"), json_object('date', new.\"date\", 'electric_user_id', new.\"electric_user_id\", 'habit_id', new.\"habit_id\", 'id', new.\"id\", 'user_id', new.\"user_id\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_habit_completions_into_oplog;",
      "CREATE TRIGGER update_main_habit_completions_into_oplog\n   AFTER UPDATE ON \"main\".\"habit_completions\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habit_completions')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habit_completions', 'UPDATE', json_object('id', new.\"id\"), json_object('date', new.\"date\", 'electric_user_id', new.\"electric_user_id\", 'habit_id', new.\"habit_id\", 'id', new.\"id\", 'user_id', new.\"user_id\"), json_object('date', old.\"date\", 'electric_user_id', old.\"electric_user_id\", 'habit_id', old.\"habit_id\", 'id', old.\"id\", 'user_id', old.\"user_id\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_habit_completions_into_oplog;",
      "CREATE TRIGGER delete_main_habit_completions_into_oplog\n   AFTER DELETE ON \"main\".\"habit_completions\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habit_completions')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'habit_completions', 'DELETE', json_object('id', old.\"id\"), NULL, json_object('date', old.\"date\", 'electric_user_id', old.\"electric_user_id\", 'habit_id', old.\"habit_id\", 'id', old.\"id\", 'user_id', old.\"user_id\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS compensation_insert_main_habit_completions_habit_id_into_oplog;",
      "CREATE TRIGGER compensation_insert_main_habit_completions_habit_id_into_oplog\n  AFTER INSERT ON \"main\".\"habit_completions\"\n  WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits') AND\n       1 == (SELECT value from _electric_meta WHERE key == 'compensations')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  SELECT 'main', 'habits', 'COMPENSATION', json_object('id', \"id\"), json_object('id', \"id\"), NULL, NULL\n  FROM \"main\".\"habits\" WHERE \"id\" = new.\"habit_id\";\nEND;",
      "DROP TRIGGER IF EXISTS compensation_update_main_habit_completions_habit_id_into_oplog;",
      "CREATE TRIGGER compensation_update_main_habit_completions_habit_id_into_oplog\n   AFTER UPDATE ON \"main\".\"habit_completions\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.habits') AND\n        1 == (SELECT value from _electric_meta WHERE key == 'compensations')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  SELECT 'main', 'habits', 'COMPENSATION', json_object('id', \"id\"), json_object('id', \"id\"), NULL, NULL\n  FROM \"main\".\"habits\" WHERE \"id\" = new.\"habit_id\";\nEND;",
      "INSERT OR IGNORE INTO _electric_trigger_settings(tablename,flag) VALUES ('main.profiles', 1);",
      "DROP TRIGGER IF EXISTS update_ensure_main_profiles_primarykey;",
      "CREATE TRIGGER update_ensure_main_profiles_primarykey\n  BEFORE UPDATE ON \"main\".\"profiles\"\nBEGIN\n  SELECT\n    CASE\n      WHEN old.\"id\" != new.\"id\" THEN\n      \t\tRAISE (ABORT, 'cannot change the value of column id as it belongs to the primary key')\n    END;\nEND;",
      "DROP TRIGGER IF EXISTS insert_main_profiles_into_oplog;",
      "CREATE TRIGGER insert_main_profiles_into_oplog\n   AFTER INSERT ON \"main\".\"profiles\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.profiles')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'profiles', 'INSERT', json_object('id', new.\"id\"), json_object('electric_user_id', new.\"electric_user_id\", 'email', new.\"email\", 'id', new.\"id\", 'nickname', new.\"nickname\", 'user_id', new.\"user_id\"), NULL, NULL);\nEND;",
      "DROP TRIGGER IF EXISTS update_main_profiles_into_oplog;",
      "CREATE TRIGGER update_main_profiles_into_oplog\n   AFTER UPDATE ON \"main\".\"profiles\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.profiles')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'profiles', 'UPDATE', json_object('id', new.\"id\"), json_object('electric_user_id', new.\"electric_user_id\", 'email', new.\"email\", 'id', new.\"id\", 'nickname', new.\"nickname\", 'user_id', new.\"user_id\"), json_object('electric_user_id', old.\"electric_user_id\", 'email', old.\"email\", 'id', old.\"id\", 'nickname', old.\"nickname\", 'user_id', old.\"user_id\"), NULL);\nEND;",
      "DROP TRIGGER IF EXISTS delete_main_profiles_into_oplog;",
      "CREATE TRIGGER delete_main_profiles_into_oplog\n   AFTER DELETE ON \"main\".\"profiles\"\n   WHEN 1 == (SELECT flag from _electric_trigger_settings WHERE tablename == 'main.profiles')\nBEGIN\n  INSERT INTO _electric_oplog (namespace, tablename, optype, primaryKey, newRow, oldRow, timestamp)\n  VALUES ('main', 'profiles', 'DELETE', json_object('id', old.\"id\"), NULL, json_object('electric_user_id', old.\"electric_user_id\", 'email', old.\"email\", 'id', old.\"id\", 'nickname', old.\"nickname\", 'user_id', old.\"user_id\"), NULL);\nEND;"
    ],
    "version": "2"
  }
]